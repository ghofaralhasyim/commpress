$small: "screen and (min-width: 28em)";
$small_portrait: "screen and (min-width: 28em) and (orientation: portrait)";
$small_landscape: "screen and (min-width: 28em) and (orientation: landscape)";

$medium: "screen and (min-width: 48em)";
$medium_portrait: "screen and (min-width: 48em) and (orientation: portrait)";
$medium_landscape: "screen and (min-width: 48em) and (orientation: landscape)";

$large: "screen and (min-width: 64em)";
$extra_large: "screen and (min-width: 75em)";

$retina: "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.25dppx), (min-resolution: 120dpi)";

$header_height: 70px;
$base_px_font_size: 16;
$base_font_size: $base_px_font_size * 1px;
$base_line_height: 1.6;

$palettes: (
  "dark": #231f20,
  "pink": #ffefe7,
  "red": #c96262,
  "white": #fff,
  "gray": #d1d1d1,
  "yellow": #ffcc81,
  "light-green": #dbe3d1,
  "green": #6b9635,
);

$light-palettes: (
  "light-grey": #ededed,
  "white": #fff,
);

@function palette($color) {
  @if map-has-key($palettes, $color) {
    @return map-get($palettes, $color);
  } @else if map-has-key($light-palettes, $color) {
    @return map-get($light-palettes, $color);
  } @else {
    @warn "key `#{$color}` was not found. Falling back to #000";
    @return #000;
  }
}

$dark: palette("dark");
$white: palette("white");
$pink: palette("pink");
$red: palette("red");

@each $state, $color in $palettes {
  .text-#{$state} {
    color: $color;
  }

  .bg-#{$state} {
    background-color: $color;
  }
}
